.. include:: ../module.txt

.. _section6-datastore-label:

DataStore Category
======================================================

.. _section6-1-rds-label:

Relational Database Service(RDS)
------------------------------------------------------

Relational Database Service(RDS)はセットアップや拡張、運用が容易なフルマネージドリレーショナルデータベースサービスである。管理コンソールやAPIによって簡単にデータベースサービスを構築でき、時間単位の従量課金性である。RDSは以下の4つのデータベースエンジンを選択できる。

* MySQL
* PostgreSQL
* Oracle
* Microsoft SQL Server

RDSではデータベース運用管理では必須となる自動バックアップ機能及び冗長化構成による自動フェイルオーバをサポートしている。自動バックアップ機能では、DBスナップショットとトランザクションログを保存している。DBスナップショットは1日1回、指定した世代数を、指定した時間帯に取得する。リストアは任意の世代のDBスナップショットを指定して復元を行う。トランザクションログは随時取得されており、任意に指定した状態へのリカバリが可能で、時刻は直近5分から、より古いスナップショットの時点の間で指定する。データベース構築時には「Multi-AZ配置」と呼ばれる、レプリケーションによる冗長化構成を選択できる。この配置をとることで、マスターとなるRDSとは別のアベイラビリティゾーンに、スレーブとなるRDSを配置し、マスターからデータを複製する。マスターに障害が発生すると、自動的にフェイルオーバし、スレーブがマスターに昇格する。Malti-AZ配置されたRDSは単一のエンドポイントを持つため、マスターが変更された場合にも情報システム側で意識することなく、データベースを利用できる。RDSへのアクセス制御はEC2と同様、Security Groupで設定する。データの暗号化機能もサポートされており、暗号化キー管理サービス「Key Management Service(KMS)」に格納されたキーを使って暗号化できる。MySQLとPostgreSQLではDBインスタンスの暗号化が、SQLServerとOracleでは、Transparent Data Encryption方式によるデータ暗号化がそれぞれ可能である。


.. _section6-2-elasticache-label:

ElastiCache
------------------------------------------------------

ElastiCacheはデータベースの応答をキャッシュに保存し高速化する。ElastiCacheでは「memcached」と「Redis」という2種類のインメモリキャッシュエンジンをサポートしている。memcachedの場合、複数ノード間のキャッシュレプリケーションなどの冗長化機能がないため、可用性はアプリケーション側で確保する必要がある。


.. _section6-3-dynamodb-label:

DynamoDB
------------------------------------------------------

DynamoDBはAmazonが設計・開発していたNoSQLデータベース「Amazon Dynamo」をベースにサービス化したデータストアである。NoSQLではトランザクションによるデータ一貫性を保証する代わりに、結果整合性を担保することでクラスタ内の全ノードでの読み書きを可能にしている。つまり、データ更新直後は古いデータを取得する可能性があるが、結果的に全て最新の状態で更新される。DynamoDBもその他のAWSサービスと同様、従量課金性で基準は指定したリクエストスループットと保存されたデータ量により決定される。DynamoDBの設定では、テーブルごとに目標とする書き込みと読み込みのリクエストスループットを指定する。DynamoDBは指定されたリクエストスループットに基づいて、自動的に必要なコンピュータリソースを確保する。保存されたデータ量によって課金されるが、データ容量は自動的に増加される。

.. _section6-4-redshift-label:


Redshift
------------------------------------------------------

Redshiftは大量データを使った集計や分析に特化したデータウェハウス・サービスである。同様に従量課金性であるが、主な特徴は、

* 高速性
* 拡張性
* 互換性

RedshiftはSQLクエリを高速化するために、列指向データベースを採用している。一般的なリレーショナルデータベースが行指向型でレコードを取得するクエリに向いているのに対し、列指向データベースでは、カラム単位でのデータを高速に集計できる。他のAWSサービスと同様、スケーラブルな特性を持ち、パフォーマンスやデータ保存ストレージが不足してもすぐにノード数や性能タイプを変更でき、MPP（Massively Parallel Processing:大規模並列計算）機構を持ち、全ノードが並列に処理するため、ノード数を増やせば処理性能も向上する。また、Redshift用にカスタマイズされたJDBCやODBCのドライバーが用意され、既存のSQLをそのまま流用でき、PostgreSQL用のドライバーを流用することが可能である。なお、既存のETL(Extract/Transform/Load)ツールやTableauといったBIツールを利用することもできる。




