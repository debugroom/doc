クラウド入門第5回講義メモ

[P4]
MapReduceの枠組み
例)
1.各々のデータに加工を加える(ログファイルからエラーの行を抜き出す等)。→Map
2.加工したデータを集約、関数を結果に対して連続的に適用していく(エラーの個数を数える等)、→Reduce

[P6]
floor:四捨五入

[P7]
reduce(foldと呼ぶ場合もある)

[P8]
演算の順序によって結果が異なるものがある
その場合→今回は考えない

[P12]
なぜMap-Reduceが有用か?
→各演算が並列に実行する事ができる。分散化された環境において、並列的に処理を動かす事ができる。

[P14]
Map処理によって、任意の入力に対して1を返却するようなone(関数)を定義する。
↑よく使用する手法、もともとできなかったことができるようになる。

[P17]
master:vol-84160763,public:157.1.145.197,private:10.3.5.149
slave1:vol-7E3F0744,public:157.1.145.196,private:10.3.5.148
slave2:vol-7D700734,public:157.1.145.198,private:10.3.5.150

[p37]
(1行ごとの)入力→Mapタスク(キーバリューペアを作成)→Hadoopがソート
→Reduceタスク(出力のキーバリューペアを作成)

[p38]
mapメソッド（必須）、setupメソッド(任意)、cleanupメソッド(任意)

[p39]
reduceメソッド（必須）、setupメソッド(任意)、cleanupメソッド(任意)

[p43]
バリューはIteratorとして、それを換算し渡される。



 





